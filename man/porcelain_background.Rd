% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/background.R
\name{porcelain_background}
\alias{porcelain_background}
\title{While porcelain makes it easy to test endpoints individually, you
may still want some integration or end-to-end tests where you
bring the entire API up and interact with it from your tests. This
class provides a helper for doing this in a way that is reasonably
tidy.}
\description{
While porcelain makes it easy to test endpoints individually, you
may still want some integration or end-to-end tests where you
bring the entire API up and interact with it from your tests. This
class provides a helper for doing this in a way that is reasonably
tidy.

While porcelain makes it easy to test endpoints individually, you
may still want some integration or end-to-end tests where you
bring the entire API up and interact with it from your tests. This
class provides a helper for doing this in a way that is reasonably
tidy.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{log}}{The path to the log file (read-only)}

\item{\code{port}}{The port used by the background server (read-only)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-porcelain_background-new}{\code{porcelain_background$new()}}
\item \href{#method-porcelain_background-start}{\code{porcelain_background$start()}}
\item \href{#method-porcelain_background-status}{\code{porcelain_background$status()}}
\item \href{#method-porcelain_background-stop}{\code{porcelain_background$stop()}}
\item \href{#method-porcelain_background-url}{\code{porcelain_background$url()}}
\item \href{#method-porcelain_background-request}{\code{porcelain_background$request()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-porcelain_background-new"></a>}}
\if{latex}{\out{\hypertarget{method-porcelain_background-new}{}}}
\subsection{Method \code{new()}}{
Create a background server object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{porcelain_background$new(
  create,
  args = NULL,
  port = NULL,
  log = NULL,
  verbose = FALSE,
  timeout = 60,
  env = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{create}}{A function that will create an api object}

\item{\code{args}}{Arguments that will be passed to \code{create} when creating
the api object in the background process}

\item{\code{port}}{The port to use for the background server.
If not given then a random free port will be used in the range
8000 to 10000 - you can find the created port using the \code{port}
field in the resulting object, or use the \verb{$url()} or \verb{$request()}
methods.}

\item{\code{log}}{The path to a log file to use}

\item{\code{verbose}}{Logical, indicating if we should print informational
messages to the console on start/stop etc.}

\item{\code{timeout}}{The number of seconds to wait for the server
to become available. This needs to cover the time taken to spawn
the R process, and create your API object (loading all packages
needed) up to the point where the server is responsive. In most
cases this will take 1-2s but if you use packages that use many
S4 methods or run this on a slow computer (e.g., a continuous
integration server) it may take longer than you expect.  The
default is one minute which should be sufficient in almost all
cases.}

\item{\code{env}}{A named character vector of environment variables (e.g.,
\code{c(VARIABLE = "value")}) to set in the background process before
launching the server. You can use this to control the behaviour of
the background server using variables your api recognises. In
addition, we export \code{callr::rcmd_safe_env()} and the value of
\code{PORCELAIN_VALIDATE}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-porcelain_background-start"></a>}}
\if{latex}{\out{\hypertarget{method-porcelain_background-start}{}}}
\subsection{Method \code{start()}}{
Start the server. It is an error to try and start
a server that is already running.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{porcelain_background$start()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-porcelain_background-status"></a>}}
\if{latex}{\out{\hypertarget{method-porcelain_background-status}{}}}
\subsection{Method \code{status()}}{
Return the background server status. This will be one of:
\itemize{
\item \code{running}: The server is running
\item \code{stopped}: The server is stopped
\item \code{blocked}: The server is stopped, but something else is running
on the port that we would use
\item \code{starting}: The server is starting up (not visible in normal usage)
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{porcelain_background$status()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-porcelain_background-stop"></a>}}
\if{latex}{\out{\hypertarget{method-porcelain_background-stop}{}}}
\subsection{Method \code{stop()}}{
Stop a running server. If the server is not running,
this has no effect.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{porcelain_background$stop()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-porcelain_background-url"></a>}}
\if{latex}{\out{\hypertarget{method-porcelain_background-url}{}}}
\subsection{Method \code{url()}}{
Create a url string for the server, interpolating the
(possibly random) port number. You can use this in your tests
like \code{bg$url("/path")}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{porcelain_background$url(path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{String representing the absolute path}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-porcelain_background-request"></a>}}
\if{latex}{\out{\hypertarget{method-porcelain_background-request}{}}}
\subsection{Method \code{request()}}{
Run a request to the server, using \code{httr}. This presents
a similar inteface to the \code{request} method on the porcelain object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{porcelain_background$request(method, path, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{The http method as a string (e.g., \code{"GET"}), passed
to \link[httr:VERB]{httr::VERB} as the \code{verb} argument}

\item{\code{path}}{String representing the absolute path, passed to \verb{$url()}}

\item{\code{...}}{Additional arguments passed to \code{httr::VERB}, such as
\code{query}, or the body for a \code{POST} request.}
}
\if{html}{\out{</div>}}
}
}
}
